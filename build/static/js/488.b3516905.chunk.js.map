{"version":3,"file":"static/js/488.b3516905.chunk.js","mappings":"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","sources":["webpack://AI APP/./src/component/Search/styles.module.css?1ec9","component/Search/index.js","component/Table/index.js","webpack://AI APP/./src/component/Genre/styles.module.css?0a8e","component/Genre/index.js","pages/Crypto/Crypto.jsx","containers/header/Header.jsx","pages/Home/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"styles_searchbar__49z2C\",\"select\":\"styles_select__aaa72\",\"category-select\":\"styles_category-select__73Hhh\"};","import styles from \"./styles.module.css\";\r\n\r\nconst Search = ({ setSearch, sort, setSort }) => {\r\n  const onSelectChange = ({ currentTarget: input }) => {\r\n    setSort({ sort: input.value, order: sort.order });\r\n  };\r\n\r\n  const onArrowChange = () => {\r\n    if (sort.order === \"asc\") {\r\n      setSort({ sort: sort.sort, order: \"desc\" });\r\n    } else {\r\n      setSort({ sort: sort.sort, order: \"asc\" });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n    <div className={styles.container}>\r\n    <div className={styles.searchbar}>\r\n      <input\r\n        type=\"text\"\r\n        className={styles.search}\r\n        placeholder=\"Search\"\r\n        onChange={({ currentTarget: input }) => setSearch(input.value)}\r\n      />\r\n      <select\r\n        onChange={onSelectChange}\r\n        className={styles.select}\r\n        defaultValue=\"all\"\r\n\r\n      >\r\n\t   <option value=\"all\">All</option>\r\n        <option value=\"free\">Free</option>\r\n        <option value=\"Trial\">Trial</option>\r\n        <option value=\"paid\">Paid</option>\r\n      </select>\r\n    </div>\r\n    </div>\r\n    </>\r\n    \r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst shuffleArray = (array) => {\r\n  let currentIndex = array.length,\r\n    randomIndex;\r\n\r\n  while (currentIndex !== 0) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex],\r\n      array[currentIndex],\r\n    ];\r\n  }\r\n\r\n  return array;\r\n};\r\n\r\nconst TruncateDescription = ({ description, maxLength }) => {\r\n  if (description.length > maxLength) {\r\n    return <>{description.substring(0, maxLength)} ...</>;\r\n  }\r\n  return <>{description}</>;\r\n};\r\n\r\nconst PopUp = ({ isOpen, content, onClose }) => {\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <div className=\"popup\">\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n          <p>{content}</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Card = ({ movie, openPopUp }) => {\r\n  return (\r\n    <div className=\"website_container\" key={movie._id}>\r\n      <div className=\"image-container\" style={{ height: \"40%\" }}>\r\n        <img src={movie.img} alt={movie.name} id=\"website_image\" />\r\n      </div>\r\n      <div className=\"content-container\">\r\n        <div className=\"name-container\">\r\n          <h2 className=\"website_name\" alt={movie.name}>\r\n            {movie.name}\r\n          </h2>\r\n          <p className={`varient-type ${movie.varient.toUpperCase()}`}>\r\n            {movie.varient}\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <br />\r\n          {movie.genre.map((genre, index) => (\r\n            <p key={genre} className=\"genera\">\r\n              {genre}\r\n              {index !== movie.genre.length - 1 && \"/\"}\r\n            </p>\r\n          ))}\r\n          <p>\r\n            <TruncateDescription description={movie.description} maxLength={120} />\r\n          </p>\r\n        </div>\r\n        <div className=\"buttons-container\">\r\n          <a href={movie.websiteUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <button className=\"website-button\">Visit Website </button>\r\n          </a>\r\n          <a className=\"greview\" onClick={() => openPopUp(movie._id)}>\r\n            Read more\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Table = ({ movies }) => {\r\n  const shuffledMovies = shuffleArray([...movies]);\r\n  const [popUpContent, setPopUpContent] = useState({\r\n    isOpen: false,\r\n    content: \"\",\r\n  });\r\n\r\n  const openPopUp = async (id) => {\r\n    try {\r\n      const selectedMovie = movies.find((movie) => movie._id === id);\r\n\r\n      if (selectedMovie && selectedMovie.popUpDescription) {\r\n        setPopUpContent({\r\n          isOpen: true,\r\n          content: selectedMovie.popUpDescription,\r\n        });\r\n      } else {\r\n        console.error(\"Pop-up description not found for the selected movie\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching pop-up description\", error);\r\n    }\r\n  };\r\n\r\n  const closePopUp = () => {\r\n    setPopUpContent({ isOpen: false, content: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div className=\"row-container\">\r\n      {shuffledMovies.map((movie) => (\r\n        <Card key={movie._id} movie={movie} openPopUp={openPopUp} />\r\n      ))}\r\n      <PopUp isOpen={popUpContent.isOpen} content={popUpContent.content} onClose={closePopUp} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"styles_container__ifoEo\",\"heading\":\"styles_heading__jEJg8\",\"genre_container\":\"styles_genre_container__sLJUD\",\"genre\":\"styles_genre__VWEgx\",\"genre_label\":\"styles_genre_label__NyVMx\",\"selected\":\"styles_selected__JIL23\"};","import React, { useState } from 'react';\r\nimport styles from './styles.module.css';\r\n\r\nconst Genre = ({ genres, filterGenre, setFilterGenre }) => {\r\n  const [selectedGenres, setSelectedGenres] = useState(new Set(filterGenre));\r\n\r\n  const onClick = (selectedGenre) => {\r\n    const updatedSelectedGenres = new Set(selectedGenres);\r\n\r\n    if (updatedSelectedGenres.has(selectedGenre)) {\r\n      updatedSelectedGenres.delete(selectedGenre);\r\n    } else {\r\n      updatedSelectedGenres.add(selectedGenre);\r\n    }\r\n\r\n    setSelectedGenres(updatedSelectedGenres);\r\n    setFilterGenre(Array.from(updatedSelectedGenres));\r\n  };\r\n\r\n  const isGenreSelected = (genre) => selectedGenres.has(genre);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.genre_container}>\r\n        {genres.map((genre) => (\r\n          <div\r\n            key={genre}\r\n            className={`${styles.genre} ${isGenreSelected(genre) ? styles.selected : ''}`}\r\n            onClick={() => onClick(genre)}\r\n          >\r\n            <p className={styles.genre_label}>{genre}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Genre;\r\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport \"./Crypto.css\";\nimport Search from \"../../component/Search\";\nimport Table from \"../../component/Table\";\nimport Genre from \"../../component/Genre\";\n\n\nfunction Crypto() {\n\tconst [obj, setObj] = useState({});\n\tconst [sort, setSort] = useState({ sort: \"varient\", order: \"desc\" });\n\tconst [filterGenre, setFilterGenre] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tconst [page, setPage] = useState(1);\n\tconst [search, setSearch] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tconst getAllMovies = async () => {\n\t\t\ttry {\n\t\t\t  const url = `https://aitool-8j7h.onrender.com/AITools?page=${page}&sort=${sort.sort},${sort.order}&genre=${filterGenre.toString()}&search=${search}`;\n\t\t\t  const { data } = await axios.get(url);\n\t\t\t  setObj(data);\n\t\t\t} catch (err) {\n\t\t\t  console.log(err);\n\t\t\t}finally {\n\t\t\t\tsetLoading(false); // Set loading to false regardless of success or failure\n\t\t\t  }\n\t\t  };\n\t\t\n\t\t  getAllMovies();\n\t}, [sort, filterGenre, page, search]);\n\n\tif (loading) {\n\t\treturn <p>Loading...</p>;\n\t  }\n\n\treturn (\n    <>\n    <div className=\"Top\">\n    <Search setSearch={setSearch} sort={sort} setSort={setSort} />\n    </div>\n    <div className=\"filter_container\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Genre\n\t\t\t\t\t\t\tfilterGenre={filterGenre}\n\t\t\t\t\t\t\tgenres={obj.response.genres || []}\n\t\t\t\t\t\t\tsetFilterGenre={setFilterGenre}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\n\t\t\t\t\t<Table movies={obj.response.tools || []} />\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\n    </>\n\t);\n}\n\nexport default Crypto;","import React from 'react';\nimport ai from '../../assets/.PNG/ai.png';\nimport './header.css';\nimport { FaYoutube, FaFacebook, FaLinkedin, FaTwitter } from 'react-icons/fa';\nimport Crypto from '../../pages/Crypto/Crypto';\n\nconst Header = () => (\n  <>\n    <div className=\"gpt3__header section__padding\" id=\"home\">\n      <div className=\"gpt3__header-image\">\n        <img src={ai} alt=\"AI\" />\n      </div>\n      <div className=\"gpt3__header-content\">\n        <h1 className=\"gradient__text\">Join Our Vibrant Community without <br/>the hassle of email sign-ups</h1>\n        <p style={{color: 'white'}}>Connect instantly by following us on social media. Hit the ‘Subscribe’, ‘Follow’, or ‘Thumbs Up’ symbols below to stay updated with our latest content and join the conversation today.</p>\n        <div className=\"social-icons\">\n          <a href='https://www.youtube.com/@Hubitai' target='_blank'><FaYoutube className=\"icon\" /></a>\n          <a href=' https://www.facebook.com/hubitai/'> <FaFacebook className=\"icon\" /></a>\n          <a href='#'> <FaLinkedin className=\"icon\" /></a>\n          <a href='#'><FaTwitter className=\"icon\" /></a>\n        </div>\n      </div>\n    </div>\n    <div>\n     <Crypto/>\n    </div>\n  </>\n);\n\nexport default Header;\n","import React from \"react\";\nimport Header from \"../../containers/header/Header\";\n\nconst Home = () => {\n  return (\n    <>\n      <Header />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["_ref","setSearch","sort","setSort","_jsx","_Fragment","children","className","styles","container","_jsxs","searchbar","type","search","placeholder","onChange","_ref3","currentTarget","input","value","_ref2","order","select","defaultValue","TruncateDescription","description","maxLength","length","substring","PopUp","isOpen","content","onClose","onClick","Card","movie","openPopUp","style","height","src","img","alt","name","id","concat","varient","toUpperCase","genre","map","index","href","websiteUrl","target","rel","_id","_ref4","movies","shuffledMovies","array","randomIndex","currentIndex","Math","floor","random","shuffleArray","popUpContent","setPopUpContent","useState","async","selectedMovie","find","popUpDescription","console","error","closePopUp","genres","filterGenre","setFilterGenre","selectedGenres","setSelectedGenres","Set","isGenreSelected","has","selectedGenre","updatedSelectedGenres","delete","add","Array","from","obj","setObj","loading","setLoading","page","setPage","useEffect","url","toString","data","axios","get","err","log","getAllMovies","Search","Genre","response","Table","tools","Header","ai","color","FaYoutube","FaFacebook","FaLinkedin","FaTwitter","Crypto","Home"],"sourceRoot":""}